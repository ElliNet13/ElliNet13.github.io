function replaceRegExp(e,t,l){let n=new RegExp(t,"g");return e.replace(n,l)}function bbCodeToHTML(e){return e=replaceRegExp(e,/(http|ftp|https)(:\/\/[\w\-_]+)((\.[\w\-_]+)+)([\w\-\.,@?^=%&:/~\+#]*[\w\-\@?^=%&/~\+#])?/g,'<a href="$1$2$3$5" target="_blank">$1$2$3$5</a>'),e=replaceRegExp(e,/\[color=([^\]]*)\]([^\[]*)\[\/color\]/g,'<span style="color: $1;">$2</span>'),e=replaceRegExp(e,/\[size=([^\]]*)\]([^\[]*)\[\/size\]/g,'<font size="$1">$2</font>'),e=replaceRegExp(e,/\[font=([^\]]*)\]([^\[]*)\[\/font\]/g,'<span style="font-family: $1, Sans-Serif, Serif;">$2</span>'),e=(e=(e=(e=(e=(e=replaceRegExp(e,/\[quote=([^\]]*)\]([^\[]*)\[\/quote\]/g,'<div class="quote"><span style="font-weight: bold; font-size: 8pt;">$1 said:</span><pre class="quote1">$2</pre></div>')).replace(/\[b\]/g,'<span style="font-weight: bold;">').replace(/\[B\]/g,'<span style="font-weight: bold;">').replace(/\[u\]/g,'<span style="text-decoration: underline;">').replace(/\[U\]/g,'<span style="text-decoration: underline;">').replace(/\[i\]/g,'<span style="font-style: italic;">').replace(/\[I\]/g,'<span style="font-style: italic;">').replace(/\[\/b\]/g,"</span>").replace(/\[\/B\]/g,"</span>").replace(/\[\/u\]/g,"</span>").replace(/\[\/U\]/g,"</span>").replace(/\[\/i\]/g,"</span>").replace(/\[\/I\]/g,"</span>")).replace(/\[li\]/g,"<li>").replace(/\[\/li\]/g,"</li>")).replace(/\[ol\]/g,"<ol>").replace(/\[\/ol\]/g,"</ol>")).replace(/\[ul\]/g,"<ul>").replace(/\[\/ul\]/g,"</ul>")).replace(/\[center\]/g,"<center>").replace(/\[\/center\]/g,"</center>")}class BBCodeElement extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"}),t=document.createElement("style");t.textContent="\n            :host {\n                font-family: 'Arial', sans-serif;\n                color: #666;\n            }\n        ",e.appendChild(t);const l=document.createElement("div");l.innerHTML=bbCodeToHTML(this.innerHTML),e.appendChild(l)}}customElements.define("bb-code",BBCodeElement);
